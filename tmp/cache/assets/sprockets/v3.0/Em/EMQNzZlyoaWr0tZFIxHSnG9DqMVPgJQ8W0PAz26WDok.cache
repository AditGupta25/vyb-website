I"'(function() {
  App.Calculator = (function() {
    var bindOnChangeCalculation, ethRates, getBitcoinAndDollarRates, getKwattRate, initializeCalculator, updateCalcValues;

    function Calculator() {}

    ethRates = {
      eth: 1
    };

    Calculator.prototype.init = function() {
      return getKwattRate(initializeCalculator);
    };

    initializeCalculator = function(_, kwattRate) {
      ethRates.kwatt = kwattRate;
      $('#kwatt-rate').html(kwattRate);
      getBitcoinAndDollarRates(updateCalcValues);
      return bindOnChangeCalculation();
    };

    getKwattRate = function(callback) {
      return new web3.eth.Contract(crowdsaleABI, '0x3d8d321d3414f66684326dd8a471d382c515495f').methods.rate().call(callback);
    };

    getBitcoinAndDollarRates = function(callback) {
      return $.get('https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=BTC,USD', function(data) {
        ethRates.btc = data.BTC;
        ethRates.usd = data.USD;
        $('#eth-value').val(1);
        return callback('eth', 1);
      });
    };

    updateCalcValues = function(anchorKey, anchorValue) {
      return Object.keys(ethRates).filter((function(_this) {
        return function(key) {
          return key !== anchorKey;
        };
      })(this)).forEach(function(key) {
        return $("input[data-sym='" + key + "']").first().val((ethRates[key] / ethRates[anchorKey]) * anchorValue);
      });
    };

    bindOnChangeCalculation = function() {
      return $('.calculator input').change(function() {
        return updateCalcValues($(this).attr('data-sym'), $(this).val());
      });
    };

    return Calculator;

  })();

  $(document).on("turbolinks:load", function() {
    var calc;
    if (($('.calculator').length)) {
      calc = new App.Calculator;
      return calc.init();
    }
  });

}).call(this);
:ET